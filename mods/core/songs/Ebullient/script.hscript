var screen;
var gameScreen;

var scrolling = false;

function postStart(song)
{
    game.camManager.snapToPos(550, 450);
    game.camManager.defaultZoom = 1;

    FlxTimer.wait(1, ()->
    {
        gameScreen = new FlxSprite(-200, -200).makeGraphic(FlxG.width * 3, FlxG.height * 2.2, 0xFF000000);
        gameScreen.alpha = 0;
        addSprite(gameScreen, BEHIND_NONE);
    });
    
    screen = new FlxSprite().makeGraphic(FlxG.width, FlxG.height, 0xFF000000);
    screen.cameras = [game.camHUD];
    add(screen);
}

function update(dt)
{
    if (!scrolling)
        return;

    game.camManager.currentPos.x += 200 * dt;
}

function stepHit(step)
{
    switch(step)
    {
        case 1:
            FlxTween.tween(game.camManager, {defaultZoom: 0.6}, 3);
            FlxTween.tween(screen, {alpha: 0}, 3);

        case 32:
            game.camManager.resume();

        case 288, 416, 481, 672:
            game.hscriptManager.callAll('onSpotlight', ['kofuku', true]);

        case 352, 448, 544:
            game.hscriptManager.callAll('onSpotlight', ['alice', true]);

        case 800:
            game.hscriptManager.callAll('onSpotlight', ['', false]);

        case 1048:
            game.camManager.snapToPos(game.camManager.currentPos.x, game.camManager.currentPos.y);

            FlxTween.tween(gameScreen, {alpha: 1}, 1, {ease: FlxEase.expoIn});
            FlxTween.tween(game.camManager.currentPos, {x: game.camManager.currentPos.x + 600}, 1, {ease: FlxEase.backIn, onComplete: (tween)->
            {
                scrolling = true;
            }});
    }
}