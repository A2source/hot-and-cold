var offsets = [[-10, 0], [0, 10], [0, -10], [10, 0]];
var mult = 1;

var timers = [];

var oppFocus = false;
var disabled = false;

function start(song)
{
    for (char in game.characters)
    {
        var time = new FlxTimer();
        timers.push(time);

        game.modchartTimers[char.name + ' cammove timer'] = time;
    }

    prevFocus = charFocus;

    switch(song)
    {
        case 'White Eyes', 'Entropy', 'Jumpman':
            mult = 0.3;

        case 'Substitute':
            mult = 0.5;
            oppFocus = true;

        case 'Error', 'The Show', 'Wow Wow':
            disabled = true;
    }
}

function goodNoteHit(note)
{
    var focused = game.charFocus == game.charNames.indexOf(note.attachedChar);

    if (!focused || disabled)
        return;

    var focus = oppFocus ? game.getCurDad() : game.getCurBF();
    var point = focus.getCameraPosition();
    
    var x = point.x + (offsets[note.noteData][0] * mult);
    var y = point.y + (offsets[note.noteData][1] * mult);

    game.camManager.focusOnPos(x, y);

    cancelTimers();

    var focus = charFocus;

    timers[charFocus].start(0.6 / game.playbackRate, ()->
    {
        if (focus != charFocus)
            return;
            
        game.camManager.focusOnPos(point.x, point.y);
    });
}

function opponentNoteHit(note)
{
    var focused = game.charFocus == game.charNames.indexOf(note.attachedChar);

    if (!focused || disabled)
        return;

    var focus = game.getCurDad();
    var point = focus.getCameraPosition();

    var x = point.x + (offsets[note.noteData][0] * mult);
    var y = point.y + (offsets[note.noteData][1] * mult);

    game.camManager.focusOnPos(x, y);

    cancelTimers();

    var focus = charFocus;

    timers[charFocus].start(0.6 / game.playbackRate, ()->
    {
        if (focus != charFocus)
            return;

        game.camManager.focusOnPos(point.x, point.y);
    });
}

function onSection(section)
{
    if (prevFocus != charFocus)
        cancelTimers();

    prevFocus = charFocus;
}

function cancelTimers()
{
    for (timer in timers)
        timer.cancel();
}